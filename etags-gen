#!/usr/bin/python3

import argparse
import subprocess
import configparser
import os,sys

import pathlib
cwd = pathlib.Path().resolve()

this_dir = pathlib.Path(__file__).parent.resolve()
readme = open(this_dir / "README.md", "r",newline='')
help_string = readme.read()
readme.close()

parser = argparse.ArgumentParser(description = help_string,formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("-v", "--verbose", help="Print included files", action="store_true")
args = parser.parse_args()

config_file = cwd / "etags-gen.ini"
if config_file.is_file() == False:
    print("etags-gen.ini not found in current working directory")
    sys.exit(1)

config = configparser.ConfigParser()
config.read(config_file)

include_paths = config['etags-gen-config']['include-paths'].split()
include_extensions = config['etags-gen-config']['include-extensions'].split()
exclude_paths = config['etags-gen-config']['exclude-paths'].split()

etags_cmd = ['etags']

etags_cmd.append('TAGS')

for include_path in include_paths:
    for root, subdirs, files in os.walk(include_path):
        for filename in files:
            file_path = os.path.join(root, filename)
            if os.path.splitext(filename)[1] in include_extensions:
                excluded_file = False
                # File is in include list and has an include extension
                # Now check for exclusions
                for exclude_path in exclude_paths:
                    if exclude_path in file_path:
                        excluded_file = True
                        break
                if not excluded_file:
                    if args.verbose:
                        print("{}".format(file_path))
                    etags_cmd.append(file_path)

subprocess.run(etags_cmd)
